/*
 * API Pix
 * A API Pix padroniza serviços oferecidos pelo PSP recebedor no contexto do arranjo Pix, como criação de cobrança, verificação de Pix recebidos, devolução e conciliação. Os serviços expostos pelo PSP recebedor permitem ao usuário recebedor estabelecer integração de sua automação com os serviços Pix do PSP.  # Evolução da API Pix As seguintes mudanças são esperadas e consideradas retro-compatíveis (_backwards-compatibility_):  - Adição de novos recursos na API Pix. - Adição de novos parâmetros opcionais a cobranças. - Adição de novos campos em respostas da API Pix. - Alteração da ordem de campos. - Adição de novos elementos em enumerações  Mudanças compatíveis não geram nova versão da API Pix. Clientes devem estar preparados para lidar com essas mudanças sem quebrar.  Mudanças incompatíveis geram nova versão da API Pix.
 *
 * OpenAPI spec version: 2.1.0
 * Contact: suporte.ti@bcb.gov.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * Identificador da localização do payload completo.
 */
@Schema(description = "Identificador da localização do payload completo.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-10-27T16:48:51.159Z[GMT]")
public class PayloadLocationCompleta {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("txid")
  private String txid = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("criacao")
  private OffsetDateTime criacao = null;

  public PayloadLocationCompleta id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public PayloadLocationCompleta txid(String txid) {
    this.txid = txid;
    return this;
  }

   /**
   * Get txid
   * @return txid
  **/
  @Schema(description = "")
  public String getTxid() {
    return txid;
  }

  public void setTxid(String txid) {
    this.txid = txid;
  }

   /**
   * Localização do Payload a ser informada na criação da cobrança.
   * @return location
  **/
  @Schema(example = "pix.example.com/qr/2353c790-eefb-11ea-adc1-0242ac120002", required = true, description = "Localização do Payload a ser informada na criação da cobrança.")
  public String getLocation() {
    return location;
  }

   /**
   * Data e hora em que a location foi criada. Respeita RFC 3339.
   * @return criacao
  **/
  @Schema(required = true, description = "Data e hora em que a location foi criada. Respeita RFC 3339.")
  public OffsetDateTime getCriacao() {
    return criacao;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayloadLocationCompleta payloadLocationCompleta = (PayloadLocationCompleta) o;
    return Objects.equals(this.id, payloadLocationCompleta.id) &&
        Objects.equals(this.txid, payloadLocationCompleta.txid) &&
        Objects.equals(this.location, payloadLocationCompleta.location) &&
        Objects.equals(this.criacao, payloadLocationCompleta.criacao);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, txid, location, criacao);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayloadLocationCompleta {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    txid: ").append(toIndentedString(txid)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    criacao: ").append(toIndentedString(criacao)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
