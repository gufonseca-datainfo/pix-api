/*
 * API Pix
 * A API Pix padroniza serviços oferecidos pelo PSP recebedor no contexto do arranjo Pix, como criação de cobrança, verificação de Pix recebidos, devolução e conciliação. Os serviços expostos pelo PSP recebedor permitem ao usuário recebedor estabelecer integração de sua automação com os serviços Pix do PSP.  # Evolução da API Pix As seguintes mudanças são esperadas e consideradas retro-compatíveis (_backwards-compatibility_):  - Adição de novos recursos na API Pix. - Adição de novos parâmetros opcionais a cobranças. - Adição de novos campos em respostas da API Pix. - Alteração da ordem de campos. - Adição de novos elementos em enumerações  Mudanças compatíveis não geram nova versão da API Pix. Clientes devem estar preparados para lidar com essas mudanças sem quebrar.  Mudanças incompatíveis geram nova versão da API Pix.
 *
 * OpenAPI spec version: 2.1.0
 * Contact: suporte.ti@bcb.gov.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.LocalDate;
/**
 * CobDataDeVencimento
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-10-27T16:48:51.159Z[GMT]")
public class CobDataDeVencimento {
  @SerializedName("dataDeVencimento")
  private LocalDate dataDeVencimento = null;

  @SerializedName("validadeAposVencimento")
  private Integer validadeAposVencimento = null;

  public CobDataDeVencimento dataDeVencimento(LocalDate dataDeVencimento) {
    this.dataDeVencimento = dataDeVencimento;
    return this;
  }

   /**
   * Trata-se de uma data, no formato &#x60;yyyy-mm-dd&#x60;, segundo ISO 8601. É a data de vencimento da cobrança. A cobrança pode ser honrada até esse dia, inclusive, em qualquer horário do dia.
   * @return dataDeVencimento
  **/
  @Schema(example = "Wed Apr 01 00:00:00 GMT 2020", required = true, description = "Trata-se de uma data, no formato `yyyy-mm-dd`, segundo ISO 8601. É a data de vencimento da cobrança. A cobrança pode ser honrada até esse dia, inclusive, em qualquer horário do dia.")
  public LocalDate getDataDeVencimento() {
    return dataDeVencimento;
  }

  public void setDataDeVencimento(LocalDate dataDeVencimento) {
    this.dataDeVencimento = dataDeVencimento;
  }

  public CobDataDeVencimento validadeAposVencimento(Integer validadeAposVencimento) {
    this.validadeAposVencimento = validadeAposVencimento;
    return this;
  }

   /**
   * Trata-se da quantidade de dias corridos após o vencimento em que a cobrança poderá ser paga. Caso vencido este período e a cobrança não tenha sido paga, esta continuará ATIVA.
   * @return validadeAposVencimento
  **/
  @Schema(required = true, description = "Trata-se da quantidade de dias corridos após o vencimento em que a cobrança poderá ser paga. Caso vencido este período e a cobrança não tenha sido paga, esta continuará ATIVA.")
  public Integer getValidadeAposVencimento() {
    return validadeAposVencimento;
  }

  public void setValidadeAposVencimento(Integer validadeAposVencimento) {
    this.validadeAposVencimento = validadeAposVencimento;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CobDataDeVencimento cobDataDeVencimento = (CobDataDeVencimento) o;
    return Objects.equals(this.dataDeVencimento, cobDataDeVencimento.dataDeVencimento) &&
        Objects.equals(this.validadeAposVencimento, cobDataDeVencimento.validadeAposVencimento);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataDeVencimento, validadeAposVencimento);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CobDataDeVencimento {\n");
    
    sb.append("    dataDeVencimento: ").append(toIndentedString(dataDeVencimento)).append("\n");
    sb.append("    validadeAposVencimento: ").append(toIndentedString(validadeAposVencimento)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
