/*
 * API Pix
 * A API Pix padroniza serviços oferecidos pelo PSP recebedor no contexto do arranjo Pix, como criação de cobrança, verificação de Pix recebidos, devolução e conciliação. Os serviços expostos pelo PSP recebedor permitem ao usuário recebedor estabelecer integração de sua automação com os serviços Pix do PSP.  # Evolução da API Pix As seguintes mudanças são esperadas e consideradas retro-compatíveis (_backwards-compatibility_):  - Adição de novos recursos na API Pix. - Adição de novos parâmetros opcionais a cobranças. - Adição de novos campos em respostas da API Pix. - Alteração da ordem de campos. - Adição de novos elementos em enumerações  Mudanças compatíveis não geram nova versão da API Pix. Clientes devem estar preparados para lidar com essas mudanças sem quebrar.  Mudanças incompatíveis geram nova versão da API Pix.
 *
 * OpenAPI spec version: 2.1.0
 * Contact: suporte.ti@bcb.gov.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Devolucao;
import io.swagger.client.model.DevolucaoSolicitada;
import org.threeten.bp.OffsetDateTime;
import io.swagger.client.model.Pix;
import io.swagger.client.model.PixConsultados;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PixApi
 */
@Ignore
public class PixApiTest {

    private final PixApi api = new PixApi();

    /**
     * Consultar devolução.
     *
     * Endpoint para consultar uma devolução através de um End To End ID do Pix e do ID da devolução
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void pixE2eidDevolucaoIdGetTest() throws ApiException {
        String e2eid = null;
        String id = null;
        Devolucao response = api.pixE2eidDevolucaoIdGet(e2eid, id);

        // TODO: test validations
    }
    /**
     * Solicitar devolução.
     *
     * Endpoint para solicitar uma devolução através de um e2eid do Pix e do ID da devolução. O motivo que será atribuído à PACS.004 será \&quot;Devolução solicitada pelo usuário recebedor do pagamento original\&quot; cuja sigla é \&quot;MD06\&quot; de acordo com a aba RTReason da PACS.004 que consta no Catálogo de Mensagens do Pix. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void pixE2eidDevolucaoIdPutTest() throws ApiException {
        DevolucaoSolicitada body = null;
        String e2eid = null;
        String id = null;
        Devolucao response = api.pixE2eidDevolucaoIdPut(body, e2eid, id);

        // TODO: test validations
    }
    /**
     * Consultar Pix.
     *
     * Endpoint para consultar um Pix através de um e2eid.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void pixE2eidGetTest() throws ApiException {
        String e2eid = null;
        Pix response = api.pixE2eidGet(e2eid);

        // TODO: test validations
    }
    /**
     * Consultar Pix recebidos.
     *
     * Endpoint para consultar Pix recebidos
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void pixGetTest() throws ApiException {
        OffsetDateTime inicio = null;
        OffsetDateTime fim = null;
        String txid = null;
        Boolean txIdPresente = null;
        String cpf = null;
        String cnpj = null;
        Integer paginacaoPaginaAtual = null;
        Integer paginacaoItensPorPagina = null;
        PixConsultados response = api.pixGet(inicio, fim, txid, txIdPresente, cpf, cnpj, paginacaoPaginaAtual, paginacaoItensPorPagina);

        // TODO: test validations
    }
}
